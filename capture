#!/bin/sh

# Default config
grabboxHome=~/.gnome-grabbox
screenshotsFolder=~/Dropbox/Public/screenshots
dropboxCli=~/bin/dropbox.py
useRandomFileNames=1
useShortener=1
configFilePath=~/.gnome-grabbox.conf

# Include user config overrides
if [ -e $configFilePath ]; then
    . $configFilePath
fi

# Generate a random filename if necessary
if [ $useRandomFileNames -eq 1 ]; then
    fileName=$( < /dev/urandom tr -dc A-Za-z0-9 | head -c8 )
else
    fileName=`date '+%Y.%m.%d.%H.%M.%S'`
fi

mkdir -p $screenshotsFolder
path=$screenshotsFolder/$fileName.png

# Take the screenshot
gnome-screenshot -a -f $path

# If the screenshot was cancelled, do nothing
if [ ! -e $path ]; then
    exit 0
fi

# Wait for dropbox to finish the upload
until [ "$dropboxStatus" = 'Idle' ]; do
    # Checking the status of dropbox
    dropboxStatus=$($dropboxCli status 2>/dev/null)
done

# Get the public url of the screenshot, we've just uploaded
url=$($dropboxCli puburl "$path")

if [ $useShortener -eq 1 ]; then
    # Shorten it with google urlshortener
    curl "https://www.googleapis.com/urlshortener/v1/url" -H 'Content-Type: application/json' -d '{"longUrl": "'$url'"}' 1>$grabboxHome/tmp 2>/dev/null
    url=$(cat $grabboxHome/tmp | awk '/id/' | sed -e 's/http\:/http|/g' | cut -d ':' -f 2 | sed -e 's/[ ",]//g' -e 's/|/:/g') 

    # Clean up
    rm $grabboxHome/tmp
fi

# Copy to clipboard
echo $url | xclip -selection clipboard

# And send a pretty notification
iconPath=$grabboxHome/img/dropboxstatus-idle.png
notifyMsg="Capture and upload ready! Picture url is:"

notify-send -i $iconPath -t 100 -h int:transient:1 "$notifyMsg $url"
